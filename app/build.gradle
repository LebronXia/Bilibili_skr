apply plugin: 'com.android.application'
//arouter
apply plugin: 'com.alibaba.arouter'

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:26.1.0'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "APP_DEBUG", "true"      //测试模式
            minifyEnabled false
            // signingConfig signingConfigs.rabtman
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "APP_DEBUG", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

//在宿主 App 中使用 implementation 依赖业务组件, 业务组件的代码就会完全暴露给宿主 App, 不利于代码的隔离
//使用 runtimeOnly 依赖业务组件, 可实现业务组件的代码在编译时对宿主 App 不可见, 仅在运行时对宿主 App 可见
rootProject.ext.merge.each { c ->
    if (c) {
        project.dependencies.add("runtimeOnly", project.project(':component-' + c))
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //公共模块
    implementation project(':basiclib')
    //di
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    annotationProcessor rootProject.ext.dependencies["router-compiler"]
    //implementation project(':component-homepage')
}
