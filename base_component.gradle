//模块名称
def componentName = project.getName().replaceAll("component-", "")
def isRunAlone = !rootProject.ext.merge.contains(componentName)

if(isRunAlone) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        if (isRunAlone) {
            applicationId rootProject.ext.android.organization + "." + componentName
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
        versionCode 1
        versionName "1.0.0"
        //给 Module 内的资源名增加前缀, 避免资源名冲突
        resourcePrefix componentName + "_"
        resValue "string", componentName + "_module_name", project.getName()
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    if (isRunAlone) {
        sourceSets {
            main {
                manifest.srcFile 'src/main/runalone/AndroidManifest.xml'
                java.srcDirs = ['src/main/java', 'src/main/runalone/java']
                res.srcDirs = ['src/main/res', 'src/main/runalone/res']
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "APP_DEBUG", "true"      //测试模式
            buildConfigField "boolean", "IS_RUN_ALONE", "${isRunAlone}"
            minifyEnabled false
            // signingConfig signingConfigs.rabtman
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "APP_DEBUG", "false"
            buildConfigField "boolean", "IS_RUN_ALONE", "${isRunAlone}"
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android {
        lintOptions {
            abortOnError false
        }
    }

    dependencies {
        implementation project(':basiclib')
        compile 'com.android.support:multidex:'
    }
}



